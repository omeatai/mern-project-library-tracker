import React, { useState, useEffect } from "react";

const AutoCompleteInput = () => {
  const [inputValue, setInputValue] = useState("");
  const [options, setOptions] = useState([
    "Apple",
    "Banana",
    "Orange",
    "Grapes",
    "Mango",
  ]);
  const [selectedOptionIndex, setSelectedOptionIndex] = useState(-1);

  const handleInputChange = (event) => {
    const value = event.target.value;
    setInputValue(value);
    setSelectedOptionIndex(-1); // Reset selected option when input changes
  };

  const handleKeyDown = (event) => {
    if (event.key === "ArrowDown") {
      // Move selection down
      setSelectedOptionIndex(
        (prevIndex) => (prevIndex + 1) % filteredOptions.length
      );
    } else if (event.key === "ArrowUp") {
      // Move selection up
      setSelectedOptionIndex((prevIndex) =>
        prevIndex === 0 ? filteredOptions.length - 1 : prevIndex - 1
      );
    } else if (event.key === "Enter" && selectedOptionIndex !== -1) {
      // Handle Enter key to select the option
      setInputValue(filteredOptions[selectedOptionIndex]);
      setSelectedOptionIndex(-1);
    }
  };

  const filteredOptions = options.filter((option) =>
    option.toLowerCase().includes(inputValue.toLowerCase())
  );

  return (
    <div>
      <input
        type="text"
        value={inputValue}
        onChange={handleInputChange}
        onKeyDown={handleKeyDown}
        placeholder="Type to filter options"
        className="border p-2"
      />
      <ul className="list-none p-2">
        {filteredOptions.map((option, index) => (
          <li
            key={index}
            className={`cursor-pointer hover:bg-gray-200 p-2 ${
              index === selectedOptionIndex ? "bg-gray-300" : ""
            }`}
            onClick={() => setInputValue(option)}
          >
            {option}
          </li>
        ))}
      </ul>
    </div>
  );
};

export default AutoCompleteInput;
